{"version":3,"file":"static/js/935.a13e8294.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/components/About/About.module.css?748f","pages/MovieDetails/components/About/About.jsx","webpack://react-homework-template/./src/pages/MovieDetails/components/AddInfo/AddInfo.module.css?1162","pages/MovieDetails/components/AddInfo/AddInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetch.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"aboutBody\":\"About_aboutBody__QdoTY\",\"img\":\"About_img__YJrzo\",\"genres\":\"About_genres__z0wJ+\",\"genre\":\"About_genre__cCAbf\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { getMovie } from 'services/fetch';\n\nimport styles from './About.module.css';\n\nexport const About = () => {\n    const [movie, setMovie] = useState({});\n    const [isLoading, setIsLoading] = useState(true)\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        try {\n            getMovie(movieId).then(response => {\n                setMovie(response.data);\n            }).finally(() => {setIsLoading(false);})\n        } catch {\n            Notify.failure(\"Oops! Something in this life went wrong... Try again later.\")\n        };\n    }, [movieId]);\n\n    return (\n        !isLoading ?\n        <>\n            {movie.title ?\n                <div className={styles.aboutBody}>\n                    {\n                        movie.poster_path &&\n                            <img\n                                src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                                alt=\"poster\"\n                                className={styles.img}\n                            />\n                    }\n                    <div>\n                        <h2>{movie.title} ({String(movie.release_date).slice(0, 4)})</h2>\n                        <p>User score: {Math.floor(movie.vote_average*10)}%</p>\n                        <h3>Overview</h3>\n                        <p>{movie.overview}</p>\n                        <h4>Genres</h4>\n                        <ul className={styles.genres}>\n                            {movie.genres.map(genre => \n                                <li key={genre.id} className={styles.genre}>{genre.name}</li>\n                            )}\n                        </ul>\n                    </div>\n                </div> : <p>Sorry, We don't have info for this movie.</p>\n            }\n        </> : <p>Loading...</p>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"addInfo\":\"AddInfo_addInfo__VWu+N\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport styles from './AddInfo.module.css'\n\nexport const AddInfo = () => {\n    const location = useLocation();\n\n    const locationFrom = location.state?.from ?? \"/\"\n\n    return (\n        <div className={styles.addInfo}>\n            <p>Additional information</p>\n            <ul>\n                <li><Link to=\"cast\" state={{from: locationFrom}}>Cast</Link></li>\n                <li><Link to=\"reviews\" state={{from: locationFrom}}>Reviews</Link></li>\n            </ul>\n        </div>\n    )\n};","import { Suspense } from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\n\nimport { About } from './components/About/About';\nimport { AddInfo } from './components/AddInfo/AddInfo';\n\nconst MovieDetails = () => {\n    const location = useLocation();\n\n    const locationFrom = location.state?.from ?? \"/\"\n\n    return (\n        <>\n            <Link to={locationFrom}>Go back</Link>\n            <About />\n            <AddInfo state={{from: locationFrom}}/>\n            <Suspense fallback={<p>Loading...</p>}>\n                <Outlet />\n            </Suspense>\n        </>\n    );\n};\n\nexport default MovieDetails;","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'cfdd02dd28707c6f234d1fe341252632';\n\nconst themoviedbFetch = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrending = async () => {\n    const params = {\n        api_key: API_KEY,\n    };\n    \n    return await themoviedbFetch.get('trending/all/day', {params});\n};\n\nexport const getSearch = async ({query, page}) => {\n    const params = {\n        api_key: API_KEY,\n        query,\n        page,\n    };\n    \n    return await themoviedbFetch.get('search/movie', {params});\n}\n\nexport const getMovie = async (movieId) => {\n    const params = {\n        api_key: API_KEY,\n    };\n\n    return await themoviedbFetch.get(`movie/${movieId}`, {params});\n}\n\nexport const getMovieCast = async (movieId) => {\n    const params = {\n        api_key: API_KEY,\n    };\n    \n    return await themoviedbFetch.get(`movie/${movieId}/credits`, {params});\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const params = {\n        api_key: API_KEY,\n    };\n    \n    return await themoviedbFetch.get(`movie/${movieId}/reviews`, {params});\n}\n\ngetSearch.propTypes = {\n    query: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n};\n\ngetMovie.propTypes = {\n    moviId: PropTypes.string.isRequired,\n};\n\ngetMovieCast.propTypes = {\n    moviId: PropTypes.string.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n    moviId: PropTypes.string.isRequired,\n};"],"names":["About","useState","movie","setMovie","isLoading","setIsLoading","movieId","useParams","useEffect","getMovie","then","response","data","finally","Notify","title","className","styles","poster_path","src","alt","String","release_date","slice","Math","floor","vote_average","overview","genres","map","genre","name","id","AddInfo","locationFrom","useLocation","state","from","to","Suspense","fallback","API_KEY","themoviedbFetch","axios","baseURL","getTrending","params","api_key","get","getSearch","query","page","getMovieCast","getMovieReviews","propTypes","PropTypes","moviId"],"sourceRoot":""}