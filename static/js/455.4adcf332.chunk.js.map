{"version":3,"file":"static/js/455.4adcf332.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/Movies/components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/fetch.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({movies}) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <ul>\n                {movies.map(({id, title, name, original_title, original_name}) =>\n                    <li key={id}>\n                        <Link to={`/movies/${id}`} state={{from: location}}>\n                            {title ?? name ?? original_title ?? original_name}\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </>\n    );\n};\n\nexport default MoviesList\n\nMoviesList.propTypes = {\n    movies: PropTypes.array.isRequired,\n};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({onSubmit}) => {\n    const [query, setQuery] = useState(\"\");\n\n    const handleChange = ({target}) => {\n        setQuery(target.value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        onSubmit(query);\n\n        setQuery(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n                <input type=\"text\" value={query} onChange={handleChange}/>\n                <button type='submit'>Search</button>\n        </form>\n    );\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchForm } from './components/SearchForm/SearchForm';\n\nimport { getSearch } from 'services/fetch';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const [totalPage, setTotalPage] = useState(1);\n\n    const query = searchParams.get(\"query\") || \"\";\n    const page = Number(searchParams.get(\"page\")) || 1;\n\n    const handleSubmit = (string) => {\n        setSearchParams({ query: string, page: 1});\n    };\n\n    const handleClick = step => {\n        setSearchParams({\n            query,\n            page: page + step,\n        });\n    };\n\n    useEffect(() => {\n        if (!searchParams.get(\"query\")) {\n            return;\n        };\n\n        try {\n            getSearch({\n                query: searchParams.get(\"query\"),\n                page: Number(searchParams.get(\"page\"))\n            }).then(({data}) => {\n                setMovies(data.results);\n                setTotalPage(data.total_pages);\n            })\n        } catch {\n            Notify.failure(\"Oops! Something in this life went wrong... Try again later.\")\n        }\n    }, [searchParams]);\n\n    return (\n        <>\n            <SearchForm onSubmit={handleSubmit} />\n            {movies.length > 0 && <MoviesList movies={movies} />}\n            {page !== 1 &&\n                <button type='button' onClick={()=>{handleClick(-1)}}>Previous page</button>\n            }\n            {page !== totalPage &&\n                <button type='button' onClick={()=>{handleClick(1)}}>Next page</button>\n            }\n        </>\n    )\n};\n\nexport default Movies;","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = 'cfdd02dd28707c6f234d1fe341252632';\n\nconst themoviedbFetch = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrending = async () => {\n    const params = {\n        api_key: API_KEY,\n    };\n    \n    return await themoviedbFetch.get('trending/all/day', {params});\n};\n\nexport const getSearch = async ({query, page}) => {\n    const params = {\n        api_key: API_KEY,\n        query,\n        page,\n    };\n    \n    return await themoviedbFetch.get('search/movie', {params});\n}\n\nexport const getMovie = async (movieId) => {\n    const params = {\n        api_key: API_KEY,\n    };\n\n    return await themoviedbFetch.get(`movie/${movieId}`, {params});\n}\n\nexport const getMovieCast = async (movieId) => {\n    const params = {\n        api_key: API_KEY,\n    };\n    \n    return await themoviedbFetch.get(`movie/${movieId}/credits`, {params});\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const params = {\n        api_key: API_KEY,\n    };\n    \n    return await themoviedbFetch.get(`movie/${movieId}/reviews`, {params});\n}\n\ngetSearch.propTypes = {\n    query: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n};\n\ngetMovie.propTypes = {\n    moviId: PropTypes.string.isRequired,\n};\n\ngetMovieCast.propTypes = {\n    moviId: PropTypes.string.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n    moviId: PropTypes.string.isRequired,\n};"],"names":["movies","location","useLocation","map","id","title","name","original_title","original_name","to","state","from","SearchForm","onSubmit","useState","query","setQuery","event","preventDefault","type","value","onChange","target","useSearchParams","searchParams","setSearchParams","setMovies","totalPage","setTotalPage","get","page","Number","handleClick","step","useEffect","getSearch","then","data","results","total_pages","Notify","string","length","MoviesList","onClick","API_KEY","themoviedbFetch","axios","baseURL","getTrending","params","api_key","getMovie","movieId","getMovieCast","getMovieReviews","propTypes","PropTypes","moviId"],"sourceRoot":""}